{"ast":null,"code":"import _classCallCheck from \"/home/jenipha/Desktop/Practise/Plan_Ahead_App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jenipha/Desktop/Practise/Plan_Ahead_App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jenipha/Desktop/Practise/Plan_Ahead_App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jenipha/Desktop/Practise/Plan_Ahead_App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jenipha/Desktop/Practise/Plan_Ahead_App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jenipha/Desktop/Practise/Plan_Ahead_App/src/components/AddTask.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nvar AddTask =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddTask, _React$Component);\n\n  function AddTask() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddTask);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddTask)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.taskRef = React.createRef();\n    _this.priorityRef = React.createRef();\n    _this.dateRef = React.createRef();\n    _this.statusRef = React.createRef();\n\n    _this.createTask = function (event) {\n      event.preventDefault();\n      var task = {\n        task: _this.taskRef.current.value,\n        priority: parseInt(_this.priorityRef.current.value),\n        date: _this.dateRef.current.value,\n        status: _this.statusRef.current.value\n      };\n\n      _this.props.addTask(task); //reset or refresh the form\n\n\n      event.currentTarget.reset();\n    };\n\n    return _this;\n  }\n\n  _createClass(AddTask, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        className: \"addtask\",\n        onSubmit: this.createTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Task:\", React.createElement(\"textarea\", {\n        name: \"task\",\n        ref: this.taskRef,\n        placeholder: \"State your task\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Priority:\", React.createElement(\"input\", {\n        name: \"priority\",\n        type: \"number\",\n        min: \"1\",\n        max: \"5\",\n        ref: this.priorityRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Due Date:\", React.createElement(\"input\", {\n        name: \"date\",\n        type: \"date\",\n        ref: this.dateRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Status:\", React.createElement(\"select\", {\n        name: \"status\",\n        ref: this.statusRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"incomplete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"To Do\"), React.createElement(\"option\", {\n        value: \"completed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Done\"))), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"+ Add a task\"));\n    }\n  }]);\n\n  return AddTask;\n}(React.Component);\n\nAddTask.propTypes = {\n  addTask: PropTypes.func.isRequired\n};\nexport default AddTask;","map":{"version":3,"sources":["/home/jenipha/Desktop/Practise/Plan_Ahead_App/src/components/AddTask.js"],"names":["React","PropTypes","AddTask","taskRef","createRef","priorityRef","dateRef","statusRef","createTask","event","preventDefault","task","current","value","priority","parseInt","date","status","props","addTask","currentTarget","reset","Component","propTypes","func","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,O;;;;;;;;;;;;;;;;;UACJC,O,GAAUH,KAAK,CAACI,SAAN,E;UACVC,W,GAAcL,KAAK,CAACI,SAAN,E;UACdE,O,GAAUN,KAAK,CAACI,SAAN,E;UACVG,S,GAAYP,KAAK,CAACI,SAAN,E;;UAMZI,U,GAAa,UAAAC,KAAK,EAAI;AACpBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,IAAI,GAAG;AACXA,QAAAA,IAAI,EAAE,MAAKR,OAAL,CAAaS,OAAb,CAAqBC,KADhB;AAEXC,QAAAA,QAAQ,EAAEC,QAAQ,CAAC,MAAKV,WAAL,CAAiBO,OAAjB,CAAyBC,KAA1B,CAFP;AAGXG,QAAAA,IAAI,EAAE,MAAKV,OAAL,CAAaM,OAAb,CAAqBC,KAHhB;AAIXI,QAAAA,MAAM,EAAE,MAAKV,SAAL,CAAeK,OAAf,CAAuBC;AAJpB,OAAb;;AAMA,YAAKK,KAAL,CAAWC,OAAX,CAAmBR,IAAnB,EARoB,CASpB;;;AACAF,MAAAA,KAAK,CAACW,aAAN,CAAoBC,KAApB;AACD,K;;;;;;;6BACQ;AACP,aACE;AAAM,QAAA,SAAS,EAAC,SAAhB;AAA0B,QAAA,QAAQ,EAAE,KAAKb,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,GAAG,EAAE,KAAKL,OAFZ;AAGE,QAAA,WAAW,EAAC,iBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EASE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,QAA5B;AAAqC,QAAA,GAAG,EAAC,GAAzC;AAA6C,QAAA,GAAG,EAAC,GAAjD;AAAqD,QAAA,GAAG,EAAE,KAAKE,WAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CATF,EAaE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,GAAG,EAAE,KAAKC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAbF,EAiBE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,GAAG,EAAE,KAAKC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAQ,QAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CAFF,CAjBF,EAwBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAxBF,CADF;AA4BD;;;;EAnDmBP,KAAK,CAACsB,S;;AAAtBpB,O,CAMGqB,S,GAAY;AACjBJ,EAAAA,OAAO,EAAElB,SAAS,CAACuB,IAAV,CAAeC;AADP,C;AAgDrB,eAAevB,OAAf","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddTask extends React.Component {\r\n  taskRef = React.createRef();\r\n  priorityRef = React.createRef();\r\n  dateRef = React.createRef();\r\n  statusRef = React.createRef();\r\n\r\n  static propTypes = {\r\n    addTask: PropTypes.func.isRequired\r\n  };\r\n\r\n  createTask = event => {\r\n    event.preventDefault();\r\n    const task = {\r\n      task: this.taskRef.current.value,\r\n      priority: parseInt(this.priorityRef.current.value),\r\n      date: this.dateRef.current.value,\r\n      status: this.statusRef.current.value\r\n    };\r\n    this.props.addTask(task);\r\n    //reset or refresh the form\r\n    event.currentTarget.reset();\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"addtask\" onSubmit={this.createTask}>\r\n        <label className=\"label\">\r\n          Task:\r\n          <textarea\r\n            name=\"task\"\r\n            ref={this.taskRef}\r\n            placeholder=\"State your task\"\r\n          />\r\n        </label>\r\n        <label className=\"label\">\r\n          Priority:\r\n          <input name=\"priority\" type=\"number\" min=\"1\" max=\"5\" ref={this.priorityRef} />\r\n        </label>\r\n        <label className=\"label\">\r\n          Due Date:\r\n          <input name=\"date\" type=\"date\" ref={this.dateRef} />\r\n        </label>\r\n        <label className=\"label\">\r\n          Status:\r\n          <select name=\"status\" ref={this.statusRef}>\r\n            <option value=\"incomplete\">To Do</option>\r\n            <option value=\"completed\">Done</option>\r\n          </select>\r\n        </label>\r\n        <button type=\"submit\">+ Add a task</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;\r\n"]},"metadata":{},"sourceType":"module"}