{"ast":null,"code":"import _defineProperty from \"/home/jenipha/Desktop/Practise/Plan_Ahead_App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/jenipha/Desktop/Practise/Plan_Ahead_App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/jenipha/Desktop/Practise/Plan_Ahead_App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jenipha/Desktop/Practise/Plan_Ahead_App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jenipha/Desktop/Practise/Plan_Ahead_App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jenipha/Desktop/Practise/Plan_Ahead_App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jenipha/Desktop/Practise/Plan_Ahead_App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jenipha/Desktop/Practise/Plan_Ahead_App/src/components/EditTask.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nvar EditTask =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditTask, _React$Component);\n\n  function EditTask() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditTask);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditTask)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleChange = function (event) {\n      var updatedTask = _objectSpread({}, _this.props.tasks, _defineProperty({}, event.currentTarget.name, event.currentTarget.value));\n\n      var index = _this.props.index;\n\n      _this.props.updateTask(index, updatedTask);\n    };\n\n    _this.completeUpdateTask = function (event) {\n      event.preventDefault();\n\n      _this.props.hideEditTask();\n    };\n\n    return _this;\n  }\n\n  _createClass(EditTask, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        className: \"addtask\",\n        onSubmit: this.completeUpdateTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Task:\", React.createElement(\"textarea\", {\n        name: \"task\",\n        value: this.props.tasks.task,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Priority:\", React.createElement(\"input\", {\n        name: \"priority\",\n        type: \"text\",\n        value: this.props.tasks.priority,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Due Date:\", React.createElement(\"input\", {\n        name: \"date\",\n        type: \"date\",\n        value: this.props.tasks.date,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Status:\", React.createElement(\"select\", {\n        name: \"status\",\n        value: this.props.tasks.status,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"incomplete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"To Do\"), React.createElement(\"option\", {\n        value: \"completed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Done\")))), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Update task\"));\n    }\n  }]);\n\n  return EditTask;\n}(React.Component);\n\nEditTask.propTypes = {\n  index: PropTypes.string.isRequired,\n  tasks: PropTypes.shape({\n    task: PropTypes.string.isRequired,\n    priority: PropTypes.number.isRequired,\n    date: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired\n  }),\n  updateTask: PropTypes.func.isRequired,\n  hideEditTask: PropTypes.func.isRequired\n};\nexport default EditTask;","map":{"version":3,"sources":["/home/jenipha/Desktop/Practise/Plan_Ahead_App/src/components/EditTask.js"],"names":["React","PropTypes","EditTask","handleChange","event","updatedTask","props","tasks","currentTarget","name","value","index","updateTask","completeUpdateTask","preventDefault","hideEditTask","task","priority","date","status","Component","propTypes","string","isRequired","shape","number","func"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass EditTask extends React.Component {\r\n  static propTypes = {\r\n    index: PropTypes.string.isRequired,\r\n    tasks: PropTypes.shape({\r\n      task: PropTypes.string.isRequired,\r\n      priority: PropTypes.number.isRequired,\r\n      date: PropTypes.string.isRequired,\r\n      status: PropTypes.string.isRequired\r\n    }),\r\n    updateTask: PropTypes.func.isRequired,\r\n    hideEditTask: PropTypes.func.isRequired\r\n  };\r\n\r\n  handleChange = event => {\r\n    const updatedTask = {\r\n      ...this.props.tasks,\r\n      [event.currentTarget.name]: event.currentTarget.value\r\n    };\r\n    const index = this.props.index;\r\n    this.props.updateTask(index, updatedTask);\r\n  };\r\n\r\n  completeUpdateTask = event => {\r\n    event.preventDefault();\r\n    this.props.hideEditTask();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"addtask\" onSubmit={this.completeUpdateTask}>\r\n        <li>\r\n          <label className=\"label\">\r\n            Task:\r\n            <textarea\r\n              name=\"task\"\r\n              value={this.props.tasks.task}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label className=\"label\">\r\n            Priority:\r\n            <input\r\n              name=\"priority\"\r\n              type=\"text\"\r\n              value={this.props.tasks.priority}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n        </li>\r\n        <li>\r\n          <label className=\"label\">\r\n            Due Date:\r\n            <input\r\n              name=\"date\"\r\n              type=\"date\"\r\n              value={this.props.tasks.date}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label className=\"label\">\r\n            Status:\r\n            <select\r\n              name=\"status\"\r\n              value={this.props.tasks.status}\r\n              onChange={this.handleChange}\r\n            >\r\n              <option value=\"incomplete\">To Do</option>\r\n              <option value=\"completed\">Done</option>\r\n            </select>\r\n          </label>\r\n        </li>\r\n        <button type=\"submit\">Update task</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditTask;\r\n"]},"metadata":{},"sourceType":"module"}