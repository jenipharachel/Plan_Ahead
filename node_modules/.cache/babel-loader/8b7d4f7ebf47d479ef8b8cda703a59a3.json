{"ast":null,"code":"import _objectSpread from \"/home/spritle/Documents/Plan_Ahead_App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/spritle/Documents/Plan_Ahead_App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/spritle/Documents/Plan_Ahead_App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/spritle/Documents/Plan_Ahead_App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/spritle/Documents/Plan_Ahead_App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/spritle/Documents/Plan_Ahead_App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/spritle/Documents/Plan_Ahead_App/src/components/App/App.js\";\nimport React from \"react\";\nimport Header from \"../Header/Header\";\nimport AddTask from \"../AddTask/AddTask\";\nimport EditTask from \"../EditTask/EditTask\";\nimport Task from \"../Task/Task\";\nimport { Container, Row, Col } from \"reactstrap\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      tasks: {},\n      editTaskKey: \"\",\n      isEditFormVisible: false\n    };\n\n    _this.addTask = function (task) {\n      //1.Taking a copy of existing state of tasks\n      var tasks = _objectSpread({}, _this.state.tasks); //2.store the new task in existing task variable\n\n\n      tasks[\"task\".concat(Date.now())] = task; //3.Set the new task to state\n\n      _this.setState({\n        tasks: tasks\n      }); //storing new variable values into state\n\n    };\n\n    _this.updateTask = function (key, updatedTask) {\n      var tasks = _objectSpread({}, _this.state.tasks);\n\n      tasks[key] = updatedTask;\n\n      _this.setState({\n        tasks: tasks\n      });\n    };\n\n    _this.hideEditTask = function () {\n      _this.setState({\n        isEditFormVisible: false\n      });\n    };\n\n    _this.editTask = function (index) {\n      // pass key to state, so the key and list of tasks can be sent to EditTask\n      var key = index;\n\n      _this.setState({\n        editTaskKey: key,\n        isEditFormVisible: true\n      });\n    };\n\n    _this.deleteTask = function (key) {\n      var tasks = _objectSpread({}, _this.state.tasks);\n\n      delete tasks[key];\n\n      _this.setState({\n        tasks: tasks\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Hello, User\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: 12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, this.state.isEditFormVisible ? React.createElement(EditTask, {\n        tasks: this.state.tasks[this.state.editTaskKey],\n        index: this.state.editTaskKey,\n        updateTask: this.updateTask,\n        hideEditTask: this.hideEditTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }) : React.createElement(AddTask, {\n        addTask: this.addTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: {\n          size: 12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, Object.keys(this.state.tasks).map(function (key) {\n        return React.createElement(Task, {\n          tasks: _this2.state.tasks[key],\n          key: key,\n          index: key,\n          editTask: _this2.editTask,\n          deleteTask: _this2.deleteTask,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        });\n      })))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/home/spritle/Documents/Plan_Ahead_App/src/components/App/App.js"],"names":["React","Header","AddTask","EditTask","Task","Container","Row","Col","App","state","tasks","editTaskKey","isEditFormVisible","addTask","task","Date","now","setState","updateTask","key","updatedTask","hideEditTask","editTask","index","deleteTask","size","Object","keys","map","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Header from \"../Header/Header\";\r\nimport AddTask from \"../AddTask/AddTask\";\r\nimport EditTask from \"../EditTask/EditTask\";\r\nimport Task from \"../Task/Task\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    tasks: {},\r\n    editTaskKey: \"\",\r\n    isEditFormVisible: false\r\n  };\r\n  addTask = task => {\r\n    //1.Taking a copy of existing state of tasks\r\n    const tasks = { ...this.state.tasks };\r\n    //2.store the new task in existing task variable\r\n    tasks[`task${Date.now()}`] = task;\r\n    //3.Set the new task to state\r\n    this.setState({ tasks: tasks }); //storing new variable values into state\r\n  };\r\n\r\n  updateTask = (key, updatedTask) => {\r\n    const tasks = { ...this.state.tasks };\r\n    tasks[key] = updatedTask;\r\n    this.setState({ tasks: tasks });\r\n  };\r\n\r\n  hideEditTask = () => {\r\n    this.setState({ isEditFormVisible: false });\r\n  };\r\n\r\n  editTask = index => {\r\n    // pass key to state, so the key and list of tasks can be sent to EditTask\r\n    const key = index;\r\n    this.setState({ editTaskKey: key, isEditFormVisible: true });\r\n  };\r\n\r\n  deleteTask = key => {\r\n    const tasks = { ...this.state.tasks };\r\n    delete tasks[key];\r\n    this.setState({ tasks: tasks });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"app\">\r\n        <Header />\r\n        <Row>\r\n          <h3>Hello, User</h3>\r\n        </Row>\r\n        <Row>\r\n          <Col sm={{ size: 12 }}>\r\n            {this.state.isEditFormVisible ? (\r\n              <EditTask\r\n                tasks={this.state.tasks[this.state.editTaskKey]}\r\n                index={this.state.editTaskKey}\r\n                updateTask={this.updateTask}\r\n                hideEditTask={this.hideEditTask}\r\n              />\r\n            ) : (\r\n              <AddTask addTask={this.addTask} />\r\n            )}\r\n          </Col>\r\n          <Col sm={{ size: 12 }}>\r\n            <ul>\r\n              {Object.keys(this.state.tasks).map(key => (\r\n                <Task\r\n                  tasks={this.state.tasks[key]}\r\n                  key={key}\r\n                  index={key}\r\n                  editTask={this.editTask}\r\n                  deleteTask={this.deleteTask}\r\n                />\r\n              ))}\r\n            </ul>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}